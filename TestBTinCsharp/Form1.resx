<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bGo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/4gxY
        SUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAA
        AABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAA
        ABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAA
        AHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAA
        ACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENv
        cHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJ
        RUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAA
        AAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAA
        JKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBo
        dHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IA
        AAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGlu
        IElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2
        MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAE
        EwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        Ao8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABF
        AEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDb
        AOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGa
        AaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKi
        AqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5
        BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWm
        BbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQes
        B78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woR
        CicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZ
        DPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJ
        ECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOk
        E8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReu
        F9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwq
        HFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEc
        IUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaH
        Jrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxu
        LKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLU
        Mw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8
        Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50Ep
        QWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kd
        SWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGb
        UeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqm
        WvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RA
        ZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5r
        bsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkq
        eYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSA
        hOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBu
        kNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3
        nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaoc
        qo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfg
        uFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZG
        xsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO
        1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T8
        5YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ
        9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAIBAQIBAQICAgICAgICAwUD
        AwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYD
        AwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAAR
        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
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAjCAIAAAAMti2GAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA09JREFUSEvV1MlPE2EYx3H/BHdUZGut7AUhhLNGdki8GUQv3IhxYV/EHXBXZNGE
        AxcTYzy8Vs2ooyEGWdVXQA8oW5WlFCgUiyYabH18ZvrOdKi0HaMm+sv30E4ynzRvZroC/tr+YfooX4Ox
        L0v3W3QlXxPDJeq5xEq+ml1SzEUvvM5a6MuyCWXaeoU+Yj3OMuZfSVEhK00vvrk9mkuIpnFYFJdQwVcx
        SJqC7ssC83WVVRj2RXLxkTRWLoKLL+NPMUuci8bfi/c43pfD/BOl8nPlhr3hXFw41bsVxm0r5U8ybimd
        ibf5pMsMOaFcbCiNWjYdF1PMH3eCCrrXN11q2KPj9Doa4SUtF13IH0PwF+gSQ7a2KU5L9JiGRGtaIrU0
        TE7TEhFCopwFNekL+KMuGp8HvN8zfQ0msUaYbIDJejDVB6NCQ+WCSCSDpCnoHi+0uwumukASEUR1cgEk
        nEHS1NDLuGC6upmEBVCtnD8JZZA0JZ2xHL28C6baTWSrPw2R20h0DJLmovFN+4n26MJE7QayZSMNkvMj
        WgZJ80J7c2Hiynqi8aMBcuuIhkHSPNE+XJi4vJYEr6P+cmtIMIOkKWiqoH252KrmkNUkcJXUymbfdJlI
        +3Bh/BKMX4TxC8LF2fszHalMUcxF4/8knoPDiPRjtS5maoDZe9PtOxc/DzNImoJ+mY7n4DCWwjyv1sUP
        M7e/Gi/OtO+Y681zfPvELHFudCOj1bhj52HqhmP6lrU7a7E/z9aTM99/glni3OgGh7EErEircMfO4VHY
        enO/vMkFY+X3obKpthRmiXPRcy+QrneMIP1IlTt2VqBptn2gAEaOwEjFVFsys8QtpU1IF4P1oSoXs9y1
        dmXYB/LRheFy73Qdo9W4o2fAYrDR3faBw+jCcOnUM0/08zQ8B8dIEcwhrcIdrUF6oSfH/u4QujBUYvZE
        zwp0rUg/UOWOViNt7Uy2vzuILgwVe6UnkC6EOU6VK9B3rJ1p9rcH0IXBInOrJ7ob6SuMVuN+qAILsXam
        2t/uRxcGC82tScwS50arOwen++E00pan8fZ+pAthMH/SE23pTrN0pTqb6ZTqSJ3uSBFqZ+F7gQ+Z0LNk
        PFyhViwJXXPbLmaJc9F/fP8jDfADbmId+QbKNEwAAAAASUVORK5CYII=
</value>
  </data>
</root>